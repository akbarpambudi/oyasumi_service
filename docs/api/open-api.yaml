openapi: 3.0.3
info:
  title: Good Night Application API
  description: RESTful API for sleep tracking, following/unfollowing users, and viewing followed users' sleep records (with pagination).
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Development server

paths:

  /sleep_records:
    get:
      summary: List all current user’s sleep records (Paginated)
      description: Retrieve all sleep records for the authenticated/current user, ordered by creation time, in a paginated format.
      operationId: listSleepRecords
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number (1-based index)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of records per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: A paginated list of SleepRecord objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSleepRecordList'
              example:
                meta:
                  page: 1
                  per_page: 20
                  total: 52
                data:
                  - id: 9
                    user_id: 1
                    start_time: "2025-04-08T11:10:00Z"
                    end_time: "2025-04-08T19:10:00Z"
                    created_at: "2025-04-08T11:10:00Z"
                    updated_at: "2025-04-08T19:10:00Z"
                  - id: 8
                    user_id: 1
                    start_time: "2025-04-07T10:05:00Z"
                    end_time: "2025-04-07T18:05:00Z"
                    created_at: "2025-04-07T10:05:00Z"
                    updated_at: "2025-04-07T18:05:00Z"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Clock In
      description: Create (clock in) a new SleepRecord with `start_time = now`.
      operationId: createSleepRecord
      security:
        - bearerAuth: []
      requestBody:
        description: Optionally include data for additional parameters if needed
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: string
                  example: "Optional data about sleep record"
      responses:
        '201':
          description: Successfully created SleepRecord
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SleepRecord'
              example:
                - id: 10
                  user_id: 1
                  start_time: "2025-04-09T12:34:56Z"
                  end_time: null
                  created_at: "2025-04-09T12:34:56Z"
                  updated_at: "2025-04-09T12:34:56Z"
                - id: 9
                  user_id: 1
                  start_time: "2025-04-08T11:10:00Z"
                  end_time: "2025-04-08T19:10:00Z"
                  created_at: "2025-04-08T11:10:00Z"
                  updated_at: "2025-04-08T19:10:00Z"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sleep_records/{id}:
    patch:
      summary: Clock Out
      description: Update an existing SleepRecord’s end_time to the current time.
      operationId: updateSleepRecord
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the SleepRecord to update
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successfully updated SleepRecord
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepRecord'
              example:
                id: 10
                user_id: 1
                start_time: "2025-04-09T12:34:56Z"
                end_time: "2025-04-09T20:34:56Z"
                created_at: "2025-04-09T12:34:56Z"
                updated_at: "2025-04-09T20:34:56Z"
        '404':
          description: SleepRecord not found or not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error (e.g. end_time before start_time)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/follow:
    post:
      summary: Follow a user
      description: Current user follows the user specified by `{id}`.
      operationId: followUser
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the user to be followed
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Followed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Followed successfully"
        '200':
          description: Already following
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Unfollow a user
      description: Current user unfollows the user specified by `{id}`.
      operationId: unfollowUser
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the user to be unfollowed
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Unfollowed successfully or was not following
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Unfollowed successfully"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/following_sleep_records:
    get:
      summary: Get sleep records from last week of all followed users (Paginated)
      description: Returns all completed sleep records (end_time not null) of users that `{id}` follows, within the past 7 days. Results are sorted by duration (descending) by default. Paginated.
      operationId: followingSleepRecords
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the user whose “following list” you want to check.
          required: true
          schema:
            type: integer
        - name: sort
          in: query
          description: Sorting method (defaults to duration descending).
          schema:
            type: string
            enum: [duration_desc, duration_asc]
        - name: page
          in: query
          description: Page number (1-based index)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of records per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: A paginated list of followed users’ SleepRecords from the past 7 days
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSleepRecordList'
              example:
                meta:
                  page: 1
                  per_page: 20
                  total: 10
                data:
                  - id: 21
                    user_id: 5
                    start_time: "2025-04-01T23:00:00Z"
                    end_time: "2025-04-02T07:00:00Z"
                    duration: 28800
                  - id: 31
                    user_id: 8
                    start_time: "2025-04-03T00:00:00Z"
                    end_time: "2025-04-03T07:45:00Z"
                    duration: 27900
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Andi"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SleepRecord:
      type: object
      properties:
        id:
          type: integer
          example: 9
        user_id:
          type: integer
          example: 1
        start_time:
          type: string
          format: date-time
          example: "2025-04-08T11:10:00Z"
        end_time:
          type: string
          format: date-time
          nullable: true
          example: "2025-04-08T19:10:00Z"
        duration:
          type: integer
          nullable: true
          description: Duration in seconds (computed field)
          example: 28800
        created_at:
          type: string
          format: date-time
          example: "2025-04-08T11:10:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-04-08T19:10:00Z"

    PaginatedSleepRecordList:
      type: object
      properties:
        meta:
          type: object
          properties:
            page:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 20
            total:
              type: integer
              example: 52
        data:
          type: array
          items:
            $ref: '#/components/schemas/SleepRecord'
      example:
        meta:
          page: 2
          per_page: 20
          total: 52
        data:
          - id: 9
            user_id: 1
            start_time: "2025-04-08T11:10:00Z"
            end_time: "2025-04-08T19:10:00Z"
            created_at: "2025-04-08T11:10:00Z"
            updated_at: "2025-04-08T19:10:00Z"

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Resource not found."
        status:
          type: integer
          example: 404
